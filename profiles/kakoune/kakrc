# Source Plugin Configs
# ─────────────────────────

evaluate-commands %sh{
  for f in $(ls ${XDG_CONFIG_HOME}/kak/plugins)
  do
    echo "source ${XDG_CONFIG_HOME}/kak/plugins/$f"
  done
}



# Visual Options
# ─────────────────────────
set global ui_options ncurses_set_title=false
addhl global/ wrap
# Increase menu contrast
face global MenuBackground white,black
set global indentwidth 2

# Split Tmux 
# ─────────────────────────
define-command -params 0.. -file-completion \
  -docstring "split tmux pane vertically" split \
  %{ tmux-terminal-vertical kak -c %val{session} -e edit! %arg{@} }

define-command -params 0.. -file-completion \
  -docstring "split tmux pane horizontally" vsplit \
  %{ tmux-terminal-horizontal kak -c %val{session} -e edit! %arg{@} }

alias global sp split
alias global vs vsplit


# Default terminal
# ─────────────────────────
hook global ModuleLoaded "x11" %{
  set-option global termcmd "alacritty -e sh -c"
}


# System clipboard handling
# ─────────────────────────
hook global WinCreate .* %{ kakboard-enable  }

# Emanote
# ─────────────────────────

define-command emanote %{ nop %sh{
    chromium "$(emanote-open "$kak_buffile")" > /dev/null 2>&1 < /dev/null & 
} }

define-command md-imv %{ nop %sh{
    (imv "$(dirname $kak_buffile)/$kak_selections") > /dev/null 2>&1 < /dev/null & 
} }

# Key Bindings
# ─────────────────────────

map global user d ':edit "%val{config}/../nixpkgs/home.nix"<ret>' -docstring 'edit kakrc'
map global user c ':comment-line <ret>' -docstring 'toggle line comments'
map global user f ':fzf-mode <ret>' -docstring 'fzf'

map global user | ':repl-new <ret>' -docstring 'create repl vertically inside tmux'
map global user s ':repl-send-text <ret>' -docstring 'send selection to repl'

map global user i '<a-i>c```[^\n]*\n,```<ret>' -docstring 'select markdown code block'
map global user e ':eval %reg{.}<ret>' -docstring 'eval kakoune config selection'
map global user o ':emanote <ret>' -docstring 'open current file in emanote via chromium'
map global user v '<a-i>(:md-imv <ret>' -docstring 'open current markdown link with imv'

# Functions
# ─────────────────────────

define-command -docstring "cite using zotero, zotero needs to be open" zoterocite \
  %{
    set-register dquote %sh{
      curl -s "http://127.0.0.1:23119/better-bibtex/cayw?format=pandoc&brackets=1"
    }
    execute-keys p
  }

define-command -docstring "evaluate selected kakoune script" do %{ eval %val{selection} }
