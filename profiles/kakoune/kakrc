# Source Plugin Configs
# ─────────────────────────

evaluate-commands %sh{
  for f in $(ls ${XDG_CONFIG_HOME}/kak/plugins)
  do
    echo "source ${XDG_CONFIG_HOME}/kak/plugins/$f"
  done
}



# Visula Options
# ─────────────────────────
set global ui_options ncurses_set_title=false
addhl global/ wrap
# Increase menu contrast
face global MenuBackground white,black
set global indentwidth 2

# Split Tmux 
# ─────────────────────────
define-command -params 0.. -file-completion \
  -docstring "split tmux pane vertically" split \
  %{ tmux-terminal-vertical kak -c %val{session} -e edit! %arg{@} }

define-command -params 0.. -file-completion \
  -docstring "split tmux pane horizontally" vsplit \
  %{ tmux-terminal-horizontal kak -c %val{session} -e edit! %arg{@} }

alias global sp split
alias global vs vsplit


# Default terminal
# ─────────────────────────
hook global ModuleLoaded "x11" %{
  set-option global termcmd "alacritty"
}


# System clipboard handling
# ─────────────────────────
hook global WinCreate .* %{ kakboard-enable  }

# Markdown
# ─────────────────────────

# This function is from https://github.com/TeddyDD/kakoune-wiki
# 
# ISC License
# 
# Copyright (c) 2018, Daniel Lewan
# 
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
# 
# THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

define-command wiki-follow-link \
-docstring %{ Follow markdown link and open or create file } %{
    evaluate-commands %{
        execute-keys %{
            <esc><a-a>c\[,\)<ret><a-:>
            <a-i>b
        }
        evaluate-commands %sh{
            FILE="$(zlinks.sh -l $kak_selection)"
            EXTENSION="''${FILE##*.}"

            openAsync () {
              ABDUCO_SESSIONS=$(abduco | awk 'NR > 1 {print $NF}')
              ABDUCO_NEW=$(echo $ABDUCO_SESSIONS | step)
              abduco -f -n $ABDUCO_NEW "$1" "$FILE" 
            }

            echo "edit" "'"$FILE"'"

            # if [[ $EXTENSION == md ]]; then
            #   echo "edit" "'"$FILE"'"
            # else
            #   openAsync xdg-open
            # fi
        }
        try %{ focus %opt{jumpclient} }
    }
}


# Key Bindings
# ─────────────────────────


hook global BufSetOption filetype=markdown %{
  map buffer user e -docstring 'wiki-follow' ': wiki-follow-link<ret>'
}

hook global BufSetOption filetype=kak %{
  define-command sys-eval 'eval %val{selection}'
  map buffer user r -docstring 'eval selection' ':sys-eval<ret>'
}

map global user d ':edit "%val{config}/../nixpkgs/home.nix"<ret>' -docstring 'edit kakrc'

